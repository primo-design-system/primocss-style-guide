@if $use-element-forms == true {
  // ELEMENTS - Forms

  //
  // Form colours
  //

  $color-fieldset-bd:           $color-grey-lighter !default;
  $input-bd-focus:              $color-blue !default;


  //
  // 1. Specifing lobotomized owl selector to define a small specing value.
  //

  fieldset {
    border: {
      color: $color-fieldset-bd;
      radius: $global-border-radius;
      style: solid;
      width: 1px;
    }

    padding: $global-spacing-unit;

    + * {
      margin-top: $global-spacing-unit; // [1] //

      //
      // Sets spacing for medium and small breakpoint if responsive is true
      //

      @if $global-responsive == true {
        @include set-breakpoint-max(sm) {
          margin-top: $global-spacing-unit-xs;
        }

        @include set-breakpoint-max(md) {
          margin-top: $global-spacing-unit-sm;
        }
      } // endif
    }

    legend {
      background-color: $global-background-color;

      border: {
        color: $color-fieldset-bd;
        radius: $global-border-radius;
        style: solid;
        width: 1px;
      }

      padding: $global-spacing-unit-sm $global-spacing-unit;
    }
  }

  label {
    @include clearfix;
    cursor: pointer;
    display: inherit;

    + * {
      margin-top: $global-spacing-unit-xs; // [1] //
    }

    //
    // Sets spacing to center radio and checkboxes more to the label element
    //

    > input {

      &[type='checkbox'],
      &[type='radio'] {
        margin: {

          right: $global-spacing-unit-sm;
          top: $global-spacing-unit-xs;
        }

        &:focus {
          border-color: $input-bd-focus;
          box-shadow: 0 0 5px rgba($input-bd-focus, .5); // sass-lint:disable-line no-color-literals
        }

        &:disabled {
          @include opacity(.5);
          cursor: not-allowed;
        }
      }

      &[type='checkbox'] {
        vertical-align: text-top;
      }

      &[type='radio'] {
        vertical-align: top;
      }
    }
  }

  input {

    &[type='text'],
    &[type='password'],
    &[type='color'],
    &[type='date'],
    &[type='datetime-local'],
    &[type='email'],
    &[type='month'],
    &[type='number'],
    &[type='search'],
    &[type='tel'],
    &[type='time'],
    &[type='url'],
    &[type='week'],
    &[type='datalist'] {
      @include input-pattern;
    }

    //
    // Sets explicit sizing for the colour picker input type
    //

    &[type='color'] {
      background-color: $color-white;

      min: {
        height: 44px;
        width: 66px;
      }

      &::-webkit-color-swatch { // sass-lint:disable-line no-vendor-prefixes
        border-radius: $global-border-radius;
      }
    }

    //
    // Re-enables the -webkit- search pseudo elements
    //

    &[type='search'] {
      // sass-lint:disable-block no-vendor-prefixes

      &::-webkit-search-cancel-button,
      &::-webkit-searchfield-cancel-button {
        appearance: searchfield-cancel-button;
      }
    }

    &[type='button'],
    &[type='reset'],
    &[type='submit'] {
      @include button-pattern;

      //
      // Removes margin-top to keep button elements inline
      //

      + button,
      + [type='button'],
      + [type='reset'],
      + [type='submit'] {
        margin-top: 0;

        //
        // Sets spacing for medium and small breakpoint if responsive is true
        //

        @if $global-responsive == true {
          @include set-breakpoint-max(sm) {
            margin-top: $global-spacing-unit-xs;
          }

          @include set-breakpoint-max(md) {
            margin-top: $global-spacing-unit-sm;
          }
        } // endif
      }
    }
  }

  textarea {
    @include input-pattern;
    height: auto;
    min-height: 175px;
    resize: both;
  }

  select {
    // sass-lint:disable-block no-vendor-prefixes

    @include input-pattern;

    background: {
      color: $color-white;
      image: url('data:image/svg+xml;utf8,%3Csvg width="10" height="3" viewBox="0 0 10 3" xmlns="http://www.w3.org/2000/svg"%3E%3Ctitle%3E⌄%3C/title%3E%3Cpath fill="%23CBCBCB" d="M9.234 0L4.617 3 0 0h1.788l2.83 1.814L7.445 0" fill-rule="evenodd"/%3E%3C/svg%3E');
      position: top $global-spacing-unit * 1.25 right $global-spacing-unit;
      repeat: no-repeat;
      size: 10px 3px;
    }

    //
    // Removes firefox select styles & arrow
    //

    text: {
      indent: .01px;
      overflow: '';
    }

    //
    // Removes firefox dotted outline focusing
    //

    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $color-black;
    }

    &::-ms-expand {
      display: none;
    }

    &:hover {
      background-image: url('data:image/svg+xml;utf8,%3Csvg width="10" height="3" viewBox="0 0 10 3" xmlns="http://www.w3.org/2000/svg"%3E%3Ctitle%3E⌄%3C/title%3E%3Cpath fill="%23000000" d="M9.234 0L4.617 3 0 0h1.788l2.83 1.814L7.445 0" fill-rule="evenodd"/%3E%3C/svg%3E');
      cursor: pointer;
    }

    &[multiple],
    &[size] {
      background-image: none;
      height: auto;

      &:hover {
        background-image: none;
      }
    }
  }

  button {
    @include button-pattern;

    + button,
    + [type='button'],
    + [type='reset'],
    + [type='submit'] {
      margin-top: 0;

      //
      // Sets spacing for medium and small breakpoint if responsive is true
      //

      @if $global-responsive == true {
        @include set-breakpoint-max(sm) {
          margin-top: $global-spacing-unit-xs;
        }

        @include set-breakpoint-max(md) {
          margin-top: $global-spacing-unit-sm;
        }
      } // endif
    }
  }
}
